import time
from config import *
import telebot
from telebot import types
import sqlite3
import random

conn = sqlite3.connect('database.db', check_same_thread=False)
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS users_db
            (user_id TEXT,\
            user_username TEXT,\
            admin TEXT,\
            money INT,\
            link  TEXT,\
            banned TEXT)''')
		
conn.commit()


bot = telebot.TeleBot(settings['tokken'])

chats_link = types.InlineKeyboardMarkup()
worker_chat = types.InlineKeyboardButton(text="–ß–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤üßë‚Äçüíª", url="https://t.me/+Mhp4Hg5Q-GQ2Nzdi")
chats_link.add(worker_chat)

main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
profile = types.KeyboardButton("–ü—Ä–æ—Ñ–∏–ª—åüë®‚Äçüíº")
setting = types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è")
link = types.KeyboardButton("–°—Å—ã–ª–∫–∞üìé")
chat = types.KeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–ø–ª–∞—Ç—Éüí∞")
main_menu.add(link, profile)
main_menu.add(setting, chat)

setting_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
chats = types.KeyboardButton("–ù–∞—à–∏ —á–∞—Ç—ãüíå")
back = types.KeyboardButton("–ù–∞–∑–∞–¥‚¨ÖÔ∏è")
setting_menu.add(chats)
setting_menu.add(back)

admin = types.ReplyKeyboardMarkup(resize_keyboard=True)
spam = types.KeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞üî•")
add_admin = types.KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞üë®üèª‚Äçüîß")
del_admin = types.KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞üíÄ")
ban = types.KeyboardButton("–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüí©")
give_money = types.KeyboardButton("–î–∞—Ç—å –¥–µ–Ω–µ–≥üí∏")
money_minus = types.KeyboardButton("–ó–∞–±—Ä–∞—Ç—å –¥–µ–Ω–µ–≥ü™¶")
admin.add(spam)
admin.add(add_admin,del_admin,ban)
admin.add(give_money,money_minus)
admin.add(back)


spam_settings = types.ReplyKeyboardMarkup(resize_keyboard=True)
spam_text = types.KeyboardButton("–¢–µ–∫—Å—Çüìú")
spam_photo = types.KeyboardButton("–ö–∞—Ä—Ç–∏–Ω–∫–∞+–¢–µ–∫—Å—Çüñº")
spam_photo_no_text = types.KeyboardButton("–ö–∞—Ä—Ç–∏–Ω–∫—Éüñº")
spam_settings.add(spam_text,spam_photo,spam_photo_no_text)

workspace = types.ReplyKeyboardMarkup(resize_keyboard=True)
CRYPTOLIR = types.KeyboardButton("CRYPTOLIR")
workspace.add(CRYPTOLIR)
workspace.add(back)

def multiple_replace(target_str, replace_values):
    for i, j in replace_values.items():
        target_str = target_str.replace(i, j)
    return target_str

@bot.message_handler(commands=['start'])
def send_welcome(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    info = c.execute(f'SELECT * FROM users_db WHERE user_id="{message.chat.id}"')
    if info.fetchone() is None:
        msg = bot.send_message(message.chat.id, texts['start'].replace('$', message.chat.username), parse_mode='HTML')
        bot.register_next_step_handler(msg, second)
    else:
        bot.send_message(message.chat.id, 'Welcome back!', reply_markup=main_menu, parse_mode='HTML')

def kartinka(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    tx = message.caption
    spam_mesag = message.photo[len(message.photo)-1].file_id

    c.execute("SELECT user_id FROM users_db where banned = '0'")
    a = c.fetchall()
    
    for id_spam in a:
        if str(message.chat.id) != id_spam[0]:
            bot.send_photo(id_spam[0], spam_mesag, caption=tx)
        else:
            pass
    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ‚úÖ', reply_markup=admin)

def textovik(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    spam_mesag = message.text
    c.execute("SELECT user_id FROM users_db where banned = '0'")
    a = c.fetchall()
    for id_spam in a:
        if str(message.chat.id) != id_spam[0]:
            bot.send_message(id_spam[0], spam_mesag)
        else:
            pass
    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ‚úÖ', reply_markup=admin)

def kartinka_no_text(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    spam_mesag = message.photo[len(message.photo)-1].file_id

    c.execute("SELECT user_id FROM users_db where banned = '0'")
    a = c.fetchall()
    
    for id_spam in a:
        if str(message.chat.id) != id_spam[0]:
            bot.send_photo(id_spam[0], spam_mesag)
        else:
            pass
    bot.send_message(message.chat.id, '–ì–æ—Ç–æ–≤–æ‚úÖ', reply_markup=admin)

def second(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    if message.text == '/start':
        msg = bot.send_message(message.chat.id, texts['anser_bitch'], parse_mode='HTML')
        bot.register_next_step_handler(msg, second)
    else:
        msg = bot.send_message(message.chat.id, texts['second'], parse_mode='HTML')
        bot.register_next_step_handler(msg, last)


def last(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    if message.text == '/start':
        bot.send_message(message.chat.id, texts['anser_bitch'], parse_mode='HTML')
    else:
        bot.send_message(message.chat.id, texts['wait'], parse_mode='HTML')
        time.sleep(5)
        sqlite_insert_query = f"""INSERT INTO users_db
                            (user_id, user_username, admin, money, link, banned)
                            VALUES
                            ('{message.chat.id}', '{message.chat.username}', '0', 0, '–£ –≤–∞—Å –Ω–µ—Ç —Å—Å—ã–ª–∫–∏', '0');"""
        count = c.execute(sqlite_insert_query)
        conn.commit()
        bot.delete_message(message.chat.id, message.message_id + 1)
        bot.send_message(message.chat.id, texts['welcome'].replace('$', message.chat.username), parse_mode='HTML', reply_markup=main_menu)


def add_adm_func(message):
    adminlist = c.execute(f'SELECT user_id FROM users_db WHERE admin="1"')
    admlist = adminlist.fetchall()
    ms_bd = []
    for a in admlist:
        ms_bd.append(a[0])
    if str(message.chat.id) in ms_bd:
        name = message.text
        user_name_find = c.execute(f"SELECT user_id FROM users_db WHERE user_username='{name}'")
        user_name_check = user_name_find.fetchall()
        c.execute(f"""UPDATE users_db SET admin = '1' WHERE user_id = '{user_name_check[0][0]}' """)
        conn.commit()
        bot.send_message(user_name_check[0][0], f'–¢–µ–±—è –¥–æ–±–∞–≤–∏–ª–∏ –≤ —á–∏—Å–ª–æ –∞–¥–º–∏–Ω–æ–≤!\n\n–ù–∞–ø–∏—à–∏ /admin')
        for admin_news in ms_bd:
            bot.send_message(admin_news, f'–£ –Ω–∞—Å –µ—â–µ 1 –∞–¥–º–∏–Ω!\n\n@{name}')



def add_money_func(message):
    adminlist = c.execute(f'SELECT user_id FROM users_db WHERE admin="1"')
    admlist = adminlist.fetchall()
    ms_bd = []
    for a in admlist:
        ms_bd.append(a[0])
    if str(message.chat.id) in ms_bd:
        name_and_money = message.text.split(' ')
        name, money_donat = name_and_money
        user_name_find = c.execute(f"SELECT user_id FROM users_db WHERE user_username='{name}'")
        user_name_check = user_name_find.fetchall()
        c.execute(f"""UPDATE users_db SET money = money + '{money_donat}' WHERE user_id = '{user_name_check[0][0]}' """)
        conn.commit()
        bot.send_message(user_name_check[0][0], f'–¢–µ–±–µ –¥–æ–±–∞–≤–∏–ª–∏ {money_donat} —Ä—É–±–ª–µ–π')
        for admin_news in ms_bd:
            bot.send_message(admin_news, f'–û–¥–∏–Ω –∏–∑ –ê–¥–º–∏–Ω–æ–≤ –∫–∏–Ω—É–ª –≤–æ—Ä–∫–µ—Ä—É –¥–µ–Ω—å–≥–∏\n\n–í–æ—Ä–∫–µ—Ä: @{name}\n\n–°—É–º–º–∞ –¥–æ–Ω–Ω–∞—Ç–∞: {money_donat}')

        bot.send_message(message.chat.id, f'–ì–æ—Ç–æ–≤–æ!‚úÖ', reply_markup=admin)


def del_money_func(message):
    adminlist = c.execute(f'SELECT user_id FROM users_db WHERE admin="1"')
    admlist = adminlist.fetchall()
    ms_bd = []
    for a in admlist:
        ms_bd.append(a[0])
    if str(message.chat.id) in ms_bd:
        name_and_money = message.text.split(' ')
        name, money_donat = name_and_money
        user_name_find = c.execute(f"SELECT user_id FROM users_db WHERE user_username='{name}'")
        user_name_check = user_name_find.fetchall()
        c.execute(f"""UPDATE users_db SET money = money - '{money_donat}' WHERE user_id = '{user_name_check[0][0]}' """)
        conn.commit()
        bot.send_message(user_name_check[0][0], f'–£ —Ç–µ–±–µ –∑–∞–±—Ä–∞–ª–∏ {money_donat} —Ä—É–±–ª–µ–π')
        for admin_news in ms_bd:
            bot.send_message(admin_news, f'–û–¥–∏–Ω –∏–∑ –ê–¥–º–∏–Ω–æ–≤ —Å–ø–∏–∑–¥–∏–ª —É –≤–æ—Ä–∫–µ—Ä–∞ –¥–µ–Ω—å–≥–∏\n\n–í–æ—Ä–∫–µ—Ä: @{name}\n\n–°—É–º–º–∞ —Å–ø–∏—Å–∞–Ω–∏—è: {money_donat}')


        bot.send_message(message.chat.id, f'–ì–æ—Ç–æ–≤–æ!‚úÖ', reply_markup=admin)
def del_adm_func(message):
    adminlist = c.execute(f'SELECT user_id FROM users_db WHERE admin="1"')
    admlist = adminlist.fetchall()
    ms_bd = []
    for a in admlist:
        ms_bd.append(a[0])
    if str(message.chat.id) in ms_bd:
        name = message.text
        user_name_find = c.execute(f"SELECT user_id FROM users_db WHERE user_username='{name}'")
        user_name_check = user_name_find.fetchall()
        c.execute(f"""UPDATE users_db SET admin = '0' WHERE user_id = '{user_name_check[0][0]}' """)
        conn.commit()
        bot.send_message(user_name_check[0][0], f'–¢—ã –±–æ–ª—å—à–µ –Ω–µ –∞–¥–º–∏–Ω!')
        ms_bd.remove(user_name_check[0][0])
        for admin_news in ms_bd:
            bot.send_message(admin_news, f'–£ –Ω–∞—Å - 1 –∞–¥–º–∏–Ω!\n\n@{name}')


def ban_func(message):
    adminlist = c.execute(f'SELECT user_id FROM users_db WHERE admin="1"')
    admlist = adminlist.fetchall()
    ms_bd = []
    for a in admlist:
        ms_bd.append(a[0])
    if str(message.chat.id) in ms_bd:
        name = message.text
        user_name_find = c.execute(f"SELECT user_id FROM users_db WHERE user_username='{name}'")
        user_name_check = user_name_find.fetchall()
        c.execute(f"""UPDATE users_db SET banned = '1' WHERE user_id = '{user_name_check[0][0]}' """)
        conn.commit()
        bot.send_message(user_name_check[0][0], f'–¢–µ–±—è –∑–∞–±–∞–Ω–∏–ª–∏!')
        bot.send_message(message.chat.id, f'–ì–æ—Ç–æ–≤–æ!‚úÖ')

def viplata(message):
    name = message.text
    user_name_find = c.execute(f"SELECT user_id FROM users_db WHERE admin='1'")
    user_name_check = user_name_find.fetchall()
    adm = []
    for a in user_name_check:
        adm.append(a[0])
    rpm_adm = random.choice(adm)
    bot.send_message(rpm_adm, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É!\n\n–í–æ—Ä–∫–µ—Ä: @{message.chat.username}\n\n–°—É–º–º–∞: {name}')
    bot.send_message(message.chat.id, f'–ê–¥–º–∏–Ω—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–∫–∞–∑ –Ω–∞ –≤—ã–ø–ª–∞—Ç—É, –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –≤–∞–º –æ—Ç–ø–∏—à—É—Ç!\n\n–°—É–º–º–∞: {name}')

@bot.message_handler(commands=['admin'])
def send_admin(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass

    adminlist = c.execute(f'SELECT user_id FROM users_db WHERE admin="1"')
    admlist = adminlist.fetchall()
    ms_bd = []
    for a in admlist:
        ms_bd.append(a[0])
    if str(message.chat.id) in ms_bd:
        bot.send_message(message.chat.id, texts['admin'], reply_markup=admin)

@bot.message_handler(content_types=['text'])
def texthandler(message):
    try:
        bot.delete_message(message.chat.id, message.message_id)
        bot.delete_message(message.chat.id, message.message_id - 1)
    except:
        pass
    info = c.execute(f'SELECT banned FROM users_db WHERE user_id="{message.chat.id}"')
    if info.fetchone()[0][0] == '0':
        mci = message.chat.id
        if message.text == '–ü—Ä–æ—Ñ–∏–ª—åüë®‚Äçüíº':
            data_db = c.execute(f'SELECT money,link FROM users_db WHERE user_id="{message.chat.id}"')
            info_db = data_db.fetchall()[0]
            rps =  multiple_replace(texts['profile'], {"0": str(info_db[0]), "None": info_db[1], "$": str(message.chat.id)})
            bot.send_message(mci, rps, parse_mode='MarkDown', reply_markup=main_menu)
        elif message.text == '–°—Å—ã–ª–∫–∞üìé':
            bot.send_message(mci, texts['link'],parse_mode='HTML', reply_markup=workspace)
        elif message.text == '–ù–∞—à–∏ —á–∞—Ç—ãüíå':
            bot.send_message(mci, texts['chat'],parse_mode='HTML', reply_markup=chats_link)
            bot.send_message(mci, '–ñ–¥–µ–º —Ç–µ–±—è –≤ —á–∞—Ç–∞—Ö!',parse_mode='HTML', reply_markup=main_menu)
        elif message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è':
            bot.send_message(mci, texts['settings'],parse_mode='HTML', reply_markup=setting_menu)
        elif message.text == '–ù–∞–∑–∞–¥‚¨ÖÔ∏è':
            bot.send_message(mci, '–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—éüí∏', reply_markup=main_menu)
        elif message.text == '–ß–∞—Ç —Å –º–∞–º–æ–Ω—Ç–∞–º–∏ü¶£':
            bot.send_message(mci, '–£ –≤–∞—Å 0 –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤üî¥', reply_markup=main_menu)
        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ωüîê':
            bot.send_message(mci, '—Ç—É—Ç –º–Ω–µ —É–∂–µ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–∞–π—Ç —Å–Ω–∞—á–∞–ª–∞', reply_markup=main_menu)
        elif message.text == '–†–∞—Å—Å—ã–ª–∫–∞üî•':
            bot.send_message(mci, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞—Å—Å—ã–ª–∫–∏', reply_markup=spam_settings)
        elif message.text == '–¢–µ–∫—Å—Çüìú':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
            bot.register_next_step_handler(msg, textovik)
        elif message.text == '–ö–∞—Ä—Ç–∏–Ω–∫–∞+–¢–µ–∫—Å—Çüñº':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
            bot.register_next_step_handler(msg, kartinka)
        elif message.text == '–ö–∞—Ä—Ç–∏–Ω–∫—Éüñº':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
            bot.register_next_step_handler(msg, kartinka_no_text)

        elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞üë®üèª‚Äçüîß':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @')
            bot.register_next_step_handler(msg, add_adm_func)
        
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @')
        elif message.text == '–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞üíÄ':
            bot.register_next_step_handler(msg, del_adm_func)

        elif message.text == '–ó–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüí©':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @')
            bot.register_next_step_handler(msg, ban_func)
        
        elif message.text == 'CRYPTOLIR':
            bot.send_message(mci, f'–í–∞—à–∞ —Å—Å—ã–ª–∫–∞:\n\n`https://CRYPTOLIR?rel={message.chat.id}`', reply_markup=main_menu, parse_mode='MarkDown')
            c.execute(f"""UPDATE users_db SET link = 'https://CRYPTOLIR?rel={message.chat.id}' WHERE user_id = '{message.chat.id}' """)
            conn.commit()

        elif message.text == '–î–∞—Ç—å –¥–µ–Ω–µ–≥üí∏':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @ –∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö \n\n(grimeca 100)')
            bot.register_next_step_handler(msg, add_money_func)

        elif message.text == '–ó–∞–±—Ä–∞—Ç—å –¥–µ–Ω–µ–≥ü™¶':
            msg = bot.send_message(mci, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @ –∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö \n\n(grimeca 100)')
            bot.register_next_step_handler(msg, del_money_func)
        
        elif message.text == '–ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–ø–ª–∞—Ç—Éüí∞':
            user_money_find = c.execute(f"SELECT money FROM users_db WHERE user_id='{message.chat.id}'")
            user_money_check = user_money_find.fetchall()[0][0]
            if int(user_money_check) != 0:
                msg = bot.send_message(mci, f'–£ –≤–∞—Å {user_money_check} —Ä—É–±–ª–µ–π, —Å–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å?')
                bot.register_next_step_handler(msg, viplata)
            else:
                bot.send_message(mci, '–£ –≤–∞—Å 0 —Ä—É–±–ª–µ–π –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≤—ã–ø–ª–∞—Ç—É')
    else:
        pass

bot.infinity_polling()
conn.close()